name: CI
on:
  push:
    branches:
      - main
    tags: '*'
  pull_request:
concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}
jobs:
  test:
    name: Julia ${{ matrix.version }} - ${{ matrix.os }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.10'
          - '1.11'
        os:
          - ubuntu-latest
        arch:
          - x64
          - x86
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}

      - name: Setup micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          micromamba-version: 'latest'
          environment-name: julia-test-env
          create-args: python=3.11

      - name: Confirm micromamba works
        shell: bash -l {0}
        run: |
          which micromamba
          micromamba info

      # tell PythonCall.jl or CondaPkg.jl where Python is
      - name: Tell Julia to use micromamba Python
        shell: bash -l {0}
        run: |
          PY=$(micromamba run -n julia-test-env which python)
          echo "Micromamba Python path: $PY"
          julia -e "using PythonCall; PythonCall.pyconfig.python = \"$PY\""

      - uses: julia-actions/cache@v1
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-runtest@v1
      - uses: julia-actions/julia-processcoverage@v1
      - uses: codecov/codecov-action@v2
        with:
          files: lcov.info
  docs:
    name: Documentation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - uses: julia-actions/julia-buildpkg@v1
      - uses: julia-actions/julia-docdeploy@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DOCUMENTER_KEY: ${{ secrets.DOCUMENTER_KEY }}
      - run: |
          julia --project=docs -e '
            using Documenter: DocMeta, doctest
            using FLOWFoil
            DocMeta.setdocmeta!(FLOWFoil, :DocTestSetup, :(using FLOWFoil); recursive=true)
            doctest(FLOWFoil)'
