@testset "Axisymmetric Mesh Tests" begin

    # - Very Basic Test - #

    x = [0.0; 1.0; 2.0]
    y = [0.0; 1.0; 2.0]
    coordinates = [x y]
    panels = FLOWFoil.generate_panel_geometry(Lewis(; body_of_revolution=[true]), coordinates)
    mesh = FLOWFoil.generate_system_geometry(Lewis(; body_of_revolution=[true]), panels)

    @test mesh.nbodies == 1
    @test mesh.panel_indices == [1:2]
    @test mesh.y == [0.0 (0.5 - 1.5)/1.5; 1.0/0.5 0.0]
    @test mesh.r == [1.0 0.5/1.5; 1.5/0.5 1.0]
    @test mesh.k2 == [1.0 0.6; 0.6 1.0]

    # - Multi Body Test - #

    x1 = [0.0; 0.5; 1.0]
    r1 = [0.0; 0.5; 0.0]

    x2 = [1.0; 0.5; 0.0; 0.5; 1.0]
    r2 = [1.5; 1.0; 1.5; 2.0; 1.5]

    coordinates = ([x1 r1], [x2 r2])
    panel_array = FLOWFoil.generate_panel_geometry(Lewis(; body_of_revolution=[true, false]), coordinates)
    mesh = FLOWFoil.generate_system_geometry(Lewis(; body_of_revolution=[true, false]), panel_array)

    @test mesh.nbodies == 2
    @test mesh.panel_indices == [[1:2]; [3:6]]
    @test mesh.mesh2panel == [1; 2; 1; 2; 3; 4]
    @test mesh.y == [
        (0.0 / 2.0)/(1.0 / 4.0) (-1.0 / 2.0)/(1.0 / 4.0) (-1.0 / 2.0)/(5.0 / 4.0) (0.0 / 2.0)/(5.0 / 4.0) (0.0 / 2.0)/(7.0 / 4.0) (-1.0 / 2.0)/(7.0 / 4.0)
        (1.0 / 2.0)/(1.0 / 4.0) (0.0 / 2.0)/(1.0 / 4.0) (0.0 / 2.0)/(5.0 / 4.0) (1.0 / 2.0)/(5.0 / 4.0) (1.0 / 2.0)/(7.0 / 4.0) (0.0 / 2.0)/(7.0 / 4.0)
        (1.0 / 2.0)/(1.0 / 4.0) (0.0 / 2.0)/(1.0 / 4.0) (0.0 / 2.0)/(5.0 / 4.0) (1.0 / 2.0)/(5.0 / 4.0) (1.0 / 2.0)/(7.0 / 4.0) (0.0 / 2.0)/(7.0 / 4.0)
        (0.0 / 2.0)/(1.0 / 4.0) (-1.0 / 2.0)/(1.0 / 4.0) (-1.0 / 2.0)/(5.0 / 4.0) (0.0 / 2.0)/(5.0 / 4.0) (0.0 / 2.0)/(7.0 / 4.0) (-1.0 / 2.0)/(7.0 / 4.0)
        (0.0 / 2.0)/(1.0 / 4.0) (-1.0 / 2.0)/(1.0 / 4.0) (-1.0 / 2.0)/(5.0 / 4.0) (0.0 / 2.0)/(5.0 / 4.0) (0.0 / 2.0)/(7.0 / 4.0) (-1.0 / 2.0)/(7.0 / 4.0)
        (1.0 / 2.0)/(1.0 / 4.0) (0.0 / 2.0)/(1.0 / 4.0) (0.0 / 2.0)/(5.0 / 4.0) (1.0 / 2.0)/(5.0 / 4.0) (1.0 / 2.0)/(7.0 / 4.0) (0.0 / 2.0)/(7.0 / 4.0)
    ]
    ri = [0.25; 0.25; 1.25; 1.25; 1.75; 1.75]
    @test isapprox(mesh.r, ri * (1.0 ./ ri'))
    y = [
        (0.0 / 2.0)/(1.0 / 4.0) (-1.0 / 2.0)/(1.0 / 4.0) (-1.0 / 2.0)/(5.0 / 4.0) (0.0 / 2.0)/(5.0 / 4.0) (0.0 / 2.0)/(7.0 / 4.0) (-1.0 / 2.0)/(7.0 / 4.0)
        (1.0 / 2.0)/(1.0 / 4.0) (0.0 / 2.0)/(1.0 / 4.0) (0.0 / 2.0)/(5.0 / 4.0) (1.0 / 2.0)/(5.0 / 4.0) (1.0 / 2.0)/(7.0 / 4.0) (0.0 / 2.0)/(7.0 / 4.0)
        (1.0 / 2.0)/(1.0 / 4.0) (0.0 / 2.0)/(1.0 / 4.0) (0.0 / 2.0)/(5.0 / 4.0) (1.0 / 2.0)/(5.0 / 4.0) (1.0 / 2.0)/(7.0 / 4.0) (0.0 / 2.0)/(7.0 / 4.0)
        (0.0 / 2.0)/(1.0 / 4.0) (-1.0 / 2.0)/(1.0 / 4.0) (-1.0 / 2.0)/(5.0 / 4.0) (0.0 / 2.0)/(5.0 / 4.0) (0.0 / 2.0)/(7.0 / 4.0) (-1.0 / 2.0)/(7.0 / 4.0)
        (0.0 / 2.0)/(1.0 / 4.0) (-1.0 / 2.0)/(1.0 / 4.0) (-1.0 / 2.0)/(5.0 / 4.0) (0.0 / 2.0)/(5.0 / 4.0) (0.0 / 2.0)/(7.0 / 4.0) (-1.0 / 2.0)/(7.0 / 4.0)
        (1.0 / 2.0)/(1.0 / 4.0) (0.0 / 2.0)/(1.0 / 4.0) (0.0 / 2.0)/(5.0 / 4.0) (1.0 / 2.0)/(5.0 / 4.0) (1.0 / 2.0)/(7.0 / 4.0) (0.0 / 2.0)/(7.0 / 4.0)
    ]
    r = ri * (1.0 ./ ri')
    @test isapprox(mesh.k2, 4.0 * r ./ (y .^ 2 .+ (r .+ 1.0) .^ 2))
end
